// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SiteNoticias.Data;

#nullable disable

namespace SiteNoticias.Migrations
{
    [DbContext(typeof(ContextoBD))]
    partial class ContextoBDModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SiteNoticias.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("SiteNoticias.Models.Comentario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("NoticiaId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NoticiaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("SiteNoticias.Models.Noticia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasColumnType("Text");

                    b.Property<int>("Curtida")
                        .HasColumnType("int");

                    b.Property<string>("DataPublicacao")
                        .IsRequired()
                        .HasColumnType("Varchar(100)");

                    b.Property<string>("Imagem")
                        .IsRequired()
                        .HasColumnType("Varchar(300)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("Varchar(100)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("View")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Noticias");
                });

            modelBuilder.Entity("SiteNoticias.Models.Perfil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Perfis");
                });

            modelBuilder.Entity("SiteNoticias.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("NoticiasId")
                        .HasColumnType("int");

                    b.Property<int>("PerfilId")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("PerfilId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("SiteNoticias.Models.Comentario", b =>
                {
                    b.HasOne("SiteNoticias.Models.Noticia", null)
                        .WithMany("Comentarios")
                        .HasForeignKey("NoticiaId");

                    b.HasOne("SiteNoticias.Models.Usuario", null)
                        .WithMany("Comentarios")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("SiteNoticias.Models.Noticia", b =>
                {
                    b.HasOne("SiteNoticias.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiteNoticias.Models.Usuario", null)
                        .WithMany("Noticias")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("SiteNoticias.Models.Usuario", b =>
                {
                    b.HasOne("SiteNoticias.Models.Perfil", "Perfil")
                        .WithMany("Usuarios")
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("SiteNoticias.Models.Noticia", b =>
                {
                    b.Navigation("Comentarios");
                });

            modelBuilder.Entity("SiteNoticias.Models.Perfil", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("SiteNoticias.Models.Usuario", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Noticias");
                });
#pragma warning restore 612, 618
        }
    }
}
